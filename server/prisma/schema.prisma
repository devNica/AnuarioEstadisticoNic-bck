// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique @default(uuid())
  email String @unique
  password String
  phoneNumber String @map("phone_number")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  info PersonalInfo[]
  @@map(name: "user_account")
}

model PersonalInfo {
  id Int @id @unique @default(autoincrement())
  firstname String 
  lastname String
  address String? @db.VarChar(255)
  age Int
  person User @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")
  @@map(name: "personal_info")
}


model MeasurementUnit {
  id Int @id @unique @default(autoincrement())
  unit String
  definition Json @db.Json
  regions MacroRegion[]
  states State[]
  provinces Province[]
  @@map(name: "measurement_unit")
}

model MacroRegion {
  id Int @id @unique @default(autoincrement())
  name String
  extension Decimal @db.Decimal(9,2)
  measurement MeasurementUnit @relation(fields: [measurementId], references: [id])
  measurementId Int @map("measurement_id")
  states State[]
  @@map(name: "macro_region")
}

model State {
  id Int @id @unique @default(autoincrement())
  name String
  extension Decimal @db.Decimal(9,2)
  measurement MeasurementUnit @relation(fields: [measurementId], references: [id])
  measurementId Int @map("measurement_id")
  region MacroRegion @relation(fields: [regionId], references: [id])
  regionId Int @map("region_id")
  provinces Province[]
  stateStatistic PopulationStatisticByState[]
  @@map(name: "state")
}

model Province {
  id Int @id @unique @default(autoincrement())
  name String
  capital String
  extension Decimal @db.Decimal(9,2)
  latitude String
  longitude String
  msm Decimal @db.Decimal(7,2)
  measurement MeasurementUnit @relation(fields: [measurementId], references: [id])
  measurementId Int @map("measurement_id")
  state State @relation(fields: [stateId], references: [id])
  stateId Int @map("state_id")
  @@map(name: "province")
}


model Period {
  id Int @id @unique @default(autoincrement())
  year String @unique
  descriptionEn String @map("description_en")
  descriptionEs String @map("description_es")
  url String
  @@map(name: "period")
  gnralStatistic GeneralPopulationStatistic[]
  stateStatistic PopulationStatisticByState[]
}

model GeneralPopulationStatistic {
  id String @id @unique @default(uuid())
  total Json @db.JsonB
  urban Json @db.JsonB
  rural Json @db.JsonB
  period Period @relation(fields: [periodId], references: [id])
  periodId Int @map("period_id")
  @@map(name: "gnral_population_statistic")
}

model PopulationStatisticByState {
  id String @id @unique @default(uuid())
  total Json @db.JsonB
  urban Json @db.JsonB
  rural Json @db.JsonB
  state State @relation(fields: [stateId], references: [id])
  stateId Int @map("state_id")
  period Period @relation(fields: [periodId], references: [id])
  periodId Int @map("period_id")
  @@map(name: "population_statistic_by_state")
}